[
  {
    "objectID": "book/03-dice.html",
    "href": "book/03-dice.html",
    "title": "§3 Rolling the Dice 🎲",
    "section": "",
    "text": "Welcome to your first hands-on project with R! We’ll create a virtual pair of dice to learn fundamental R concepts. Just as historians analyze artifacts or literary scholars examine texts, we’ll be examining the building blocks of data analysis.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#understanding-the-rstudio-interface",
    "href": "book/03-dice.html#understanding-the-rstudio-interface",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n1.1 Understanding the RStudio Interface 🖥️",
    "text": "1.1 Understanding the RStudio Interface 🖥️\nWhen you open RStudio, you’ll see four main panes:\n\nConsole (usually bottom-left): This is where you type R commands and see results. Think of it as a conversation with R - you ask questions, and R answers.\nSource (usually top-left): Here you write and edit R scripts. It’s like a digital notebook for your code.\nEnvironment (usually top-right): This shows data and objects in R’s memory. Imagine it as a shelf where R stores all the information you’ve given it.\nFiles/Plots/Packages/Help (usually bottom-right): This multi-purpose pane is like a Swiss Army knife, offering file management, visualizations, add-ons, and documentation.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#running-r-code",
    "href": "book/03-dice.html#running-r-code",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n1.2 Running R Code 🏃‍♂️",
    "text": "1.2 Running R Code 🏃‍♂️\nThere are several ways to execute R code in RStudio:\n\n\nUsing the Console:\n\nType code directly into the Console and press Enter.\n\n\n\nUsing the Source Editor:\n\nWrite code in the Source Editor.\nRun a single line: Place cursor on the line and press Ctrl+Enter (Cmd+Enter on Mac).\nRun multiple lines: Highlight lines and press Ctrl+Enter (Cmd+Enter on Mac).\nRun entire script: Click “Run” button or press Ctrl+Shift+Enter (Cmd+Shift+Enter on Mac).\n\n\n\n\n\n\n\n\n\nPro Tip\n\n\n\nWriting code in the Source Editor allows you to save, edit, and rerun your entire analysis easily.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#learning-check",
    "href": "book/03-dice.html#learning-check",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n1.3 Learning Check 🏁",
    "text": "1.3 Learning Check 🏁",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#hands-on-coding",
    "href": "book/03-dice.html#hands-on-coding",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n1.4 Hands-On Coding 💻",
    "text": "1.4 Hands-On Coding 💻\nTry the following:\n\nOpen RStudio and create a new R script named “my_first_script.R”\nIn the script, write a simple calculation (e.g., 5 * 7)\nRun this calculation using different methods:\n\nConsole\nRunning a single line\nRunning the entire script\n\n\nObserve where the result appears in the RStudio interface\n\n\n# In my_first_script.R\n5 * 7\n\n# In Console\n&gt; 5 * 7\n[1] 35",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#creating-a-die-as-an-object",
    "href": "book/03-dice.html#creating-a-die-as-an-object",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n2.1 Creating a Die as an Object 🎲",
    "text": "2.1 Creating a Die as an Object 🎲\nLet’s start by creating a single die:\n\ndie &lt;- 1:6\ndie\n\n[1] 1 2 3 4 5 6\n\n\n\n\n\n\n\n\nKey Concepts\n\n\n\n\n\nVector: A basic container that can hold multiple items of the same type.\n\n\n\n\n\n\n\n\n\nThe Colon Operator\n\n\n\nThe colon operator (:) returns every integer between two integers. It’s an easy way to create a sequence of numbers.\n\n\n🙋🏻‍♀️ What if I want to create a vector that’s not a sequence of numbers?\n\n2.1.1 Combining Data: c()\n\nIn R, c() stands for “combine” or “concatenate”. It’s used to create vectors, which are sequences of data elements of the same type. For example:\n\n# Creating a vector of numbers\nnumbers &lt;- c(2, 4, 6, 8, 10)\nnumbers\n\n[1]  2  4  6  8 10\n\n# Creating a vector of characters (text)\nfruits &lt;- c(\"apple\", \"banana\", \"cherry\")\nfruits\n\n[1] \"apple\"  \"banana\" \"cherry\"\n\n# Creating a vector of logical values\nlogical_values &lt;- c(TRUE, FALSE, TRUE, TRUE)\nlogical_values\n\n[1]  TRUE FALSE  TRUE  TRUE\n\n# You can also mix data types, but R will convert them to a single type\nmixed &lt;- c(1, \"two\", TRUE)\nmixed # R converts all to characters\n\n[1] \"1\"    \"two\"  \"TRUE\"\n\n\n The c() function is versatile and essential for creating custom datasets in R. You can use it to make lists of any kind of data you’re working with in your research.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#manipulating-objects",
    "href": "book/03-dice.html#manipulating-objects",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n2.2 Manipulating Objects",
    "text": "2.2 Manipulating Objects\nYou can perform various operations on your die object:\n\ndie - 1\n\n[1] 0 1 2 3 4 5\n\ndie * 2\n\n[1]  2  4  6  8 10 12\n\ndie / 2\n\n[1] 0.5 1.0 1.5 2.0 2.5 3.0",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#learning-check-1",
    "href": "book/03-dice.html#learning-check-1",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n2.3 Learning Check 🏁",
    "text": "2.3 Learning Check 🏁",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#hands-on-coding-1",
    "href": "book/03-dice.html#hands-on-coding-1",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n2.4 Hands-On Coding 💻",
    "text": "2.4 Hands-On Coding 💻\nTry the following:\n\nCreate an object called favorite_number and assign it your favorite number.\nCreate a vector called lucky_numbers with 3-5 numbers you consider lucky.\nUse the length() function to find out how many lucky numbers you have.\nCreate a new vector called unlucky_numbers by subtracting 1 from each of your lucky_numbers.\nCreate a vector called all_numbers that combines your lucky_numbers and unlucky_numbers.\n\n\n\n# 1. Create favorite_number\nfavorite_number &lt;- 7\n\n# 2. Create lucky_numbers\nlucky_numbers &lt;- c(3, 7, 13)\n\n# 3. Use length() function\nlength(lucky_numbers)\n\n[1] 3\n\n# 4. Create unlucky_numbers\nunlucky_numbers &lt;- lucky_numbers - 1\n\n# 5. Combine vectors\nall_numbers &lt;- c(lucky_numbers, unlucky_numbers)\nprint(all_numbers)\n\n[1]  3  7 13  2  6 12\n\n\n\n\n\n\n\n\nPrinting in R\n\n\n\nIn R, using print() is often optional when working in the console. Simply typing the object name (e.g., all_numbers) will automatically display its contents. However, print() is useful in functions or scripts where you want to ensure output is displayed. It’s also helpful for explicitly showing your intent to output a value.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#key-concepts-of-functions-in-r",
    "href": "book/03-dice.html#key-concepts-of-functions-in-r",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n3.1 Key Concepts of Functions in R",
    "text": "3.1 Key Concepts of Functions in R\n\nPurpose: Functions are reusable blocks of code that perform a specific task.\n\nStructure: A function typically has three parts:\n\n\nName: What you call the function (e.g., sum, mean, plot)\n\nArguments: Input values the function needs to do its job\n\nBody: The code that defines what the function does\n\nHere’s the generic structure of a function in R:\n\nname_of_function &lt;- function(argument1, argument2, ...) {\n  # Body of the function\n  # Perform operations using the arguments\n\n  return(result)  # Output of the function\n}\n\nIn this structure:\n\n\nname_of_function is where you specify the function’s name\n\nfunction() keyword defines it as a function\n\n(argument1, argument2, ...) are the inputs the function accepts\nThe code between { and } is the body of the function\n\nreturn() specifies what the function outputs\n\nNow, let’s look at a specific example:\n\ndouble_value &lt;- function(x) {\n  result &lt;- x * 2\n  return(result)\n}\n\nIn this example:\n\nThe function name is double_value\n\nIt has one argument: x\n\nThe body is the code between the curly braces { }\n\nThe return() statement specifies what the function outputs\n\nYou can use this function like this:\n\ndoubled_value &lt;- double_value(5)\ndoubled_value\n\n[1] 10\n\n\n\nInput and Output: Functions often take input (arguments) and return output (results).\nBuilt-in vs. Custom: R has many built-in functions, but you can also create your own. You can also set default values for the arguments so that the function can still run without input.\n\nSyntax: To use a function, type its name followed by parentheses containing any arguments:\nfunction_name(argument1, argument2, ...)\n\nDocumentation: You can learn about a function’s use and arguments with ?function_name in the console.\n\nRemember, functions are powerful tools that help you organize and streamline your code, making your analysis more efficient and readable.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#using-built-in-functions",
    "href": "book/03-dice.html#using-built-in-functions",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n3.2 Using Built-in Functions",
    "text": "3.2 Using Built-in Functions\nR comes with many built-in functions that you can use right away. These are like the basic tools that come in a starter toolkit. Let’s look at a few examples:\n\n# The round() function rounds numbers\nround(3.14159)\n\n[1] 3\n\n# The sum() function adds numbers together\nsum(1, 2, 3, 4, 5)\n\n[1] 15\n\n# The length() function tells you how many items are in a list or vector\nlength(die)\n\n[1] 6\n\n\nUsing a function is straightforward. You write the name of the function followed by parentheses. Inside the parentheses, you put the information (called “arguments”) that the function needs to do its job.\n\n\n\n\n\n\nComments in R\n\n\n\nDid you notice the # … part in the above code chunk?\nIn R, the # symbol is used to create comments. Anything after a # on a line is ignored by R when running the code. Comments are useful for:\n\nExplaining what your code does\nTemporarily disabling code without deleting it\nOrganizing your script into sections\n\n\n\n\n3.2.1 Simulating Randomness: sample()\n\nTo simulate rolling a die, we need a function that can randomly select a number. The sample() function is perfect for this task. It’s like reaching into a bag and pulling out a random item.\n\n# Roll the die once\nsample(x = die, size = 1)\n\n[1] 1\n\n# Roll the die again\nsample(x = die, size = 1)\n\n[1] 4\n\n\nIn this case, x = die tells the function what to choose from (our die object), and size = 1 says to pick one number.\n\n\n\n\n\n\nSampling With Replacement\n\n\n\nBy default, sample() doesn’t put the number back in the “bag” after selecting it. For dice rolling, we want to allow the same number to be selected multiple times. Use replace = TRUE in the sample() function to achieve this.\n\n\n\n# Roll two dice\nsample(die, size = 2, replace = TRUE)\n\n[1] 4 4",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#writing-your-own-functions",
    "href": "book/03-dice.html#writing-your-own-functions",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n3.3 Writing Your Own Functions",
    "text": "3.3 Writing Your Own Functions\nLet’s create a function to roll two dice:\n\nroll &lt;- function() {\n  dice &lt;- sample(die, size = 2, replace = TRUE)\n  sum(dice)\n}\n\nLet’s break this down:\n\n\nroll &lt;- function() { ... } creates a new function named roll.\nInside the curly braces { } is the “body” of the function - the instructions for what it should do.\n\ndice &lt;- sample(die, size = 2, replace = TRUE) rolls two dice.\n\nsum(dice) adds up the numbers rolled.\n\nNow, whenever you want to roll two dice and get the sum, you can simply use:\n\nroll()\n\n[1] 6\n\nroll()\n\n[1] 4",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#learning-check-2",
    "href": "book/03-dice.html#learning-check-2",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n3.4 Learning Check 🏁",
    "text": "3.4 Learning Check 🏁",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#hands-on-coding-2",
    "href": "book/03-dice.html#hands-on-coding-2",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n3.5 Hands-On Coding 💻",
    "text": "3.5 Hands-On Coding 💻\nLet’s practice using and creating functions:\n\nUse the mean() function to calculate the average of your lucky_numbers.\nCreate a function called double_it that takes a number and returns its double.\nUse your double_it function on your favorite_number.\nCreate a function called roll_dice that simulates rolling any number of dice. It should take one argument: the number of dice to roll.\n(Optional challenge) Modify your roll_dice function to accept a second argument for the number of sides on each die.\n\n\n\n# 1. Calculate mean of lucky_numbers\nmean(lucky_numbers)\n\n[1] 7.666667\n\n# 2. Create double_it function\ndouble_it &lt;- function(x) {\n  return(x * 2)\n}\n\n# 3. Use double_it on favorite_number\ndouble_it(favorite_number)\n\n[1] 14\n\n# 4. Create roll_dice function\nroll_dice &lt;- function(num_dice) {\n  return(sum(sample(1:6, num_dice, replace = TRUE)))\n}\n\n# 5. (Optional) Modified roll_dice function\nroll_dice &lt;- function(num_dice, num_sides = 6) {\n  return(sum(sample(1:num_sides, num_dice, replace = TRUE)))\n}",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#why-use-quarto",
    "href": "book/03-dice.html#why-use-quarto",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n4.1 Why Use Quarto?",
    "text": "4.1 Why Use Quarto?\n\n\nReproducibility: Quarto documents contain both code and narrative that make it easy to reproduce your analyses.\n\nProfessional Presentation: Create polished, professional-looking documents.\n\nFlexibility: Output to various formats like HTML, PDF, or slideshows.\n\n\n\n\n\n\n\nThe Importance of Reproducibility\n\n\n\nIn the humanities, as in all academic fields, being able to reproduce results is crucial. When you write your R code in scripts, you’re creating a record of every step in your analysis. This is like creating detailed footnotes or citations in a research paper - it allows others (or future you!) to follow your work exactly.\nUsing scripts also makes it easy to make changes and rerun your entire analysis, which is much more efficient than trying to remember and retype everything in the console.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#quarto-document",
    "href": "book/03-dice.html#quarto-document",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n4.2 Quarto Document",
    "text": "4.2 Quarto Document\nA Quarto document has two main parts: - A header at the top (called YAML header) - The main content (text and code)\nBelow is an example:\nyaml\n---\ntitle: \"My First Quarto Document\"\nauthor: \"Your Name\"\nformat: html\n---\nThis is where you write your content.\n\nYou can use markdown to format your text or use the \"visual editing mode\" to have an experience similar to Microsoft Word editor.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#essential-quarto-concepts",
    "href": "book/03-dice.html#essential-quarto-concepts",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n4.3 Essential Quarto Concepts",
    "text": "4.3 Essential Quarto Concepts\n\n4.3.1 Rendering\nRendering is the process of converting your Quarto document into its final output format (e.g., HTML, PDF, or Word). To render your document:\n\nClick the “Render” button in RStudio, or\nUse the keyboard shortcut Ctrl+Shift+K (Cmd+Shift+K on Mac)\n\nWhen you render, Quarto executes all the code in your document and combines the results with your text to create the final output.\n\n4.3.2 Code Chunk Options\nCode chunks in Quarto can be customized using options. These options control how the code is executed and displayed. Here are some common options:\n```{r}\n#| label: chunk-name\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n\n# Your R code here\n```\n\n\nlabel: Gives the chunk a unique name\n\necho: Controls whether the code is displayed in the output (true/false)\n\neval: Determines if the code should be executed (true/false)\n\nwarning: Shows or hides warnings (true/false)\n\nmessage: Shows or hides messages (true/false)\n\nYou can set these options globally in the YAML header or for individual chunks.\n\n\n\n\n\n\nPro Tip\n\n\n\nUse code chunk options to control what your readers see. For example, you might hide code for complex calculations but show the results.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#learning-check-3",
    "href": "book/03-dice.html#learning-check-3",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n4.4 Learning Check 🏁",
    "text": "4.4 Learning Check 🏁",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/03-dice.html#hands-on-coding-3",
    "href": "book/03-dice.html#hands-on-coding-3",
    "title": "§3 Rolling the Dice 🎲",
    "section": "\n4.5 Hands-On Coding 💻",
    "text": "4.5 Hands-On Coding 💻\nLet’s practice creating a simple Quarto document:\n\nCreate a new Quarto document in RStudio.\nAdd a title and your name as the author.\nWrite a brief introduction about dice rolling simulations.\nInsert a code chunk that uses your roll_dice function to simulate rolling 2 dice.\nAdd some text explaining the result.\n(Optional challenge) Create a code chunk that simulates rolling 2 dice 100 times and calculates the average result.\n\n\n---\ntitle: \"Dice Rolling Simulation\"\nauthor: \"Your Name\"\nformat: html\n---\n\n## Introduction\n\nIn this document, we'll simulate rolling dice using R functions we've created.\n\n## Rolling Two Dice\n\nLet's roll two six-sided dice:\n\n\nroll_dice &lt;- function(num_dice) {\n  return(sum(sample(1:6, num_dice, replace = TRUE)))\n}\n\nresult &lt;- roll_dice(2)\nprint(paste(\"The result of rolling 2 dice is:\", result))\n\n[1] \"The result of rolling 2 dice is: 12\"\n\n\nThis simulates rolling two six-sided dice and adding up the results.\n\n## (Optional) Multiple Rolls\n\nLet's simulate rolling 2 dice 100 times and calculate the average:\n\n\nresults &lt;- replicate(100, roll_dice(2))\naverage_result &lt;- mean(results)\nprint(paste(\"The average result of 100 rolls is:\", round(average_result, 2)))\n\n[1] \"The average result of 100 rolls is: 6.88\"\n\n\nThis gives us an idea of the expected value when rolling two dice.",
    "crumbs": [
      "Book",
      "§3 Rolling the Dice 🎲"
    ]
  },
  {
    "objectID": "book/01-introduction.html#digital-humanities-analysis-with-r",
    "href": "book/01-introduction.html#digital-humanities-analysis-with-r",
    "title": "§1 Introduction to Digital Humanities",
    "section": "\n2 Digital Humanities Analysis with R",
    "text": "2 Digital Humanities Analysis with R\nLet’s explore some fascinating examples of how computational methods can be applied to humanities questions.\n\n2.1 Example 1: Text Analysis of Literary Works\n\nCodelibrary(pacman)\np_load(tidyverse, tidytext, wordcloud, gutenbergr, scales, hrbrthemes)\n\n# Function to download and process text\n# gutenberg_works(title == \"The Age of Innocence\")\ninno &lt;- gutenberg_download(541)\n\n# Analyze word frequencies\nword_freq &lt;- inno %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  anti_join(stop_words) %&gt;%\n  count(word, sort = TRUE) %&gt;%\n  top_n(20, n)\n\n# Create a bar plot of word frequencies\np &lt;- ggplot(word_freq, aes(x = reorder(word, n), y = n)) +\n  geom_col(fill = \"#69b3a2\", width = 0.7) +\n  geom_text(aes(label = n), hjust = -0.3, size = 3) +\n  coord_flip() +\n  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +\n  labs(x = NULL, y = \"Frequency\", \n       title = \"Top 20 Most Frequent Words in The Age of Innocence\",\n       subtitle = \"After removing common stop words\",\n       caption = \"Source: Project Gutenberg\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", margin = margin(b = 10)),\n    plot.subtitle = element_text(size = 12, color = \"gray50\", margin = margin(b = 20)),\n    plot.caption = element_text(size = 10, color = \"gray50\", margin = margin(t = 10)),\n    axis.text = element_text(size = 10),\n    axis.title = element_text(size = 12),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n# Print the plot\nprint(p)\n\n\n\n\n\n\n\nThis word cloud visualizes the most frequent words in The Age of Innocence, giving us a quick insight into common themes and vocabulary.\n\n\n\n\n\n\nDiscussion\n\n\n\n\n\n\nWhat words stand out to you in this visualization?\nHow might this kind of analysis complement traditional close reading of literary works?\nWhat limitations might this approach have for understanding the author’s language?\n\n\n\n\n\n2.2 Example 2: Sentiment Analysis of Jane Austen’s Novels\n\nCodelibrary(janeaustenr)\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(hrbrthemes)\n\n# Combine Austen's novels\nausten_books &lt;- austen_books() %&gt;%\n  group_by(book) %&gt;%\n  mutate(\n    linenumber = row_number(),\n    chapter = cumsum(str_detect(text, regex(\"^chapter [\\\\divxlc]\", ignore_case = TRUE)))\n  ) %&gt;%\n  ungroup()\n\n# Perform sentiment analysis\nausten_sentiment &lt;- austen_books %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  inner_join(get_sentiments(\"bing\"), multiple=\"all\") %&gt;%\n  count(book, index = linenumber %/% 100, sentiment) %&gt;%\n  pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) %&gt;% \n  mutate(sentiment = positive - negative)\n\n# Plot sentiment over narrative time\nggplot(austen_sentiment, aes(index, sentiment, fill = book)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~book, ncol = 2, scales = \"free_x\") +\n  labs(\n    title = \"Sentiment Analysis of Jane Austen's Novels\",\n    subtitle = \"Emotional trajectory throughout the narrative\",\n    x = \"Narrative Time\",\n    y = \"Sentiment Score\",\n    caption = \"Data: janeaustenr package | Analysis: tidytext\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(size = 12),\n    strip.text = element_text(size = 14, face = \"bold\"),\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(size = 18, face = \"bold\"),\n    plot.subtitle = element_text(size = 14, color = \"gray50\"),\n    plot.caption = element_text(size = 10, color = \"gray50\"),\n    axis.title = element_text(size = 12, face = \"bold\"),\n    plot.margin = margin(20, 20, 20, 20)\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_y_continuous(expand = expansion(mult = c(0.1, 0.1)))\n\n\n\n\n\n\nCode# Display summary statistics\nausten_summary &lt;- austen_sentiment %&gt;%\n  group_by(book) %&gt;%\n  summarize(\n    mean_sentiment = mean(sentiment),\n    max_sentiment = max(sentiment),\n    min_sentiment = min(sentiment)\n  )\n\nknitr::kable(austen_summary, caption = \"Summary Statistics of Sentiment Analysis\", digits = 2)\n\n\nSummary Statistics of Sentiment Analysis\n\nbook\nmean_sentiment\nmax_sentiment\nmin_sentiment\n\n\n\nSense & Sensibility\n9.94\n51\n-26\n\n\nPride & Prejudice\n10.69\n42\n-31\n\n\nMansfield Park\n12.47\n61\n-45\n\n\nEmma\n14.40\n48\n-31\n\n\nNorthanger Abbey\n9.19\n47\n-33\n\n\nPersuasion\n15.14\n59\n-13\n\n\n\n\n\nThis visualization shows the emotional trajectory of Jane Austen’s novels over their narrative time.\n\n\n\n\n\n\nDiscussion: Narrative Emotions\n\n\n\n\n\n\nWhat patterns do you notice in the emotional arcs of Austen’s novels?\nHow might this type of analysis enhance our understanding of narrative structure?\nWhat challenges might arise in applying sentiment analysis to historical texts?\n\n\n\n\n\n2.3 Example 3: Network Analysis of “Empresses in the Palace” Characters\n\nCodelibrary(pacman)\np_load(jsonlite,igraph,ggraph,tidyverse,showtext,ggrepel,cowplot)\n\n# Add Noto Sans CJK font\nfont_add_google(\"Noto Sans SC\", \"Noto Sans SC\")\nshowtext_auto()\n\n\n# Read the JSON data\nrelation_data &lt;- fromJSON(\"../book/data/relation.json\")\n\nrelation_data$nodes &lt;- relation_data$nodes %&gt;% rename(Bio=\"角色描述\")\n\nrelation_data$nodes &lt;- relation_data$nodes%&gt;%\nmutate(Alliance = ifelse(Alliance==\"皇后阵容\",\"皇后阵营\",Alliance))\n\n# Ensure that the 'source' and 'target' in edges match the 'ID' in nodes\nrelation_data$edges$source &lt;- as.character(relation_data$edges$source)\nrelation_data$edges$target &lt;- as.character(relation_data$edges$target)\nrelation_data$nodes$ID &lt;- as.character(relation_data$nodes$ID)\nedges &lt;- relation_data$edges %&gt;% select(-Relationship)\n# Set the ID as the row names for the nodes dataframe\nrownames(relation_data$nodes) &lt;- relation_data$nodes$ID\n\n# Create the directed graph\nempresses_graph &lt;- graph_from_data_frame(d = edges,\n                                         vertices = relation_data$nodes$ID,\n                                         directed = TRUE)\n\n# Set node attributes\nV(empresses_graph)$Alliance &lt;- relation_data$nodes$Alliance\nV(empresses_graph)$Label &lt;- relation_data$nodes$Label\n\n# Create a color palette for alliances\nalliance_colors &lt;- c(\n  \"皇室成员\" = \"#4E79A7\",  # Royal Blue\n  \"皇后阵营\" = \"#F28E2B\",  # Warm Orange\n  \"甄嬛阵营\" = \"#E15759\",  # Soft Red\n  \"华妃阵营\" = \"#76B7B2\"   # Teal\n)\n\n# Calculate node size based on total degree centrality (in + out)\nV(empresses_graph)$size &lt;- degree(empresses_graph, mode = \"total\") * 0.5 + 3\nE(empresses_graph)$Relationship &lt;- relation_data$edges$Relationship\n\n# Plot the network\nset.seed(123) # for reproducibility\nplot &lt;- ggraph(empresses_graph, layout = \"fr\") +\n  geom_edge_link0(aes(edge_color = Relationship), \n                  arrow = arrow(length = unit(0.2, \"inches\"),\n                  ends = \"last\", type = \"closed\"), \n                  show.legend = FALSE, \n                  width = 1) +\n  geom_node_point(aes(color = Alliance, size = size), \n                  shape = 20, show.legend = FALSE) +\n  geom_node_text(aes(label = Label), repel = TRUE, size = 6) +\n  scale_color_manual(values = alliance_colors) +\n  scale_edge_colour_discrete() +\n  scale_size_continuous(range = c(5, 20)) +\n  theme_void() +\n  labs(title = \"Character Network in 'Empresses in the Palace'\",\n       subtitle = \"Directed relationships between key figures in the Chinese drama\") +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 14),\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 10, face = \"bold\")\n  )\n\n# Plot\nplot\n\n\n\n\n\n\n\nThis visualization shows the complex network of relationships between characters in the Chinese drama “Empresses in the Palace” (甄嬛传).\n\n\n\n\n\n\nDiscussion: Character Networks in Historical Dramas\n\n\n\n\n\n\nWhat insights can we gain from this network visualization? What information is presented in the plot?\nWhich characters appear to be central to the network? How might their positions reflect their importance in the narrative?\nHow could this type of analysis complement traditional literary analysis of historical dramas or novels?\nWhat limitations might this network analysis have in representing the complex relationships and dynamics of the story?\n\n\n\n\nLet’s verify our impressions!\n\nView Analyses\n\n\n\nCodelibrary(pacman)\np_load(jsonlite,igraph,ggraph,tidyverse,showtext,ggrepel,cowplot)\n# Create dummy data for legends\nalliance_data &lt;- data.frame(\n  Alliance = levels(factor(V(empresses_graph)$Alliance)),\n  x = 1,\n  y = 1:length(levels(factor(V(empresses_graph)$Alliance)))\n)\n\nsize_data &lt;- data.frame(\n  size = c(5, 10, 15, 20),\n  x = 1,\n  y = 1:4\n)\n\nrelationship_data &lt;- data.frame(\n  Relationship = levels(factor(E(empresses_graph)$Relationship)),\n  x = 1,\n  y = 1:length(levels(factor(E(empresses_graph)$Relationship)))\n)\n\n# Create separate legends\nnode_legend &lt;- cowplot::get_legend(\n  ggplot() +\n    geom_point(data = alliance_data, aes(x, y, color = Alliance), size = 5) +\n    geom_point(data = size_data, aes(x, y, size = size), color = \"black\") +\n    scale_color_manual(values = alliance_colors, name = \"Alliance\") +\n    scale_size_continuous(range = c(5, 20), name = \"Connections\") +\n    guides(\n      color = guide_legend(override.aes = list(size = 5)),\n      size = guide_legend(override.aes = list(color = \"steelblue\"))\n    ) +\n    theme(\n      legend.background = element_blank(),\n      legend.key = element_blank(),\n      legend.spacing.y = unit(0.5, \"cm\")\n    )\n)\n\nedge_legend &lt;- cowplot::get_legend(\n  ggplot(relationship_data, aes(x, y, color = Relationship)) +\n    geom_segment(aes(x = 0, xend = 1, yend = y),\n                 arrow = arrow(length = unit(0.2, \"inches\"), type = \"closed\")) +\n    scale_color_discrete(name = \"Relationship\") +\n    theme(\n      legend.background = element_blank(),\n      legend.key = element_blank(),\n      legend.spacing.y = unit(0.2, \"cm\"),\n      legend.text = element_text(margin = margin(r = 15))\n    )\n)\n\n# Combine plot and legends\ncombined_legend &lt;- plot_grid(\n  node_legend, \n  edge_legend, \n  ncol = 1, \n  rel_heights = c(1, 1.5),\n  align = 'v',\n  axis = 'l'\n)\n\n# Combine main plot and legends\nfinal_plot &lt;- plot_grid(\n  plot, \n  combined_legend,\n  rel_widths = c(5, 2),\n  align = 'h',\n  axis = 'tb'\n)\n\n# Display the final plot\nfinal_plot\n\n\n\n\n\n\n\n\nCodelibrary(pacman)\np_load(jsonlite,igraph,ggraph,tidyverse,showtext,ggrepel,cowplot)\n\n# Display summary statistics\ncharacter_summary &lt;- tibble(\n  Alliance = names(table(V(empresses_graph)$Alliance)),\n  Count = as.numeric(table(V(empresses_graph)$Alliance))\n)%&gt;%\n  arrange(desc(Count)) \n\nknitr::kable(character_summary, caption = \"Summary of Character Alliances\")\n\n\nSummary of Character Alliances\n\nAlliance\nCount\n\n\n\n甄嬛阵营\n22\n\n\n皇后阵营\n12\n\n\n华妃阵营\n6\n\n\n皇室成员\n4\n\n\n\n\nCode# Calculate and display top 5 characters by total degree centrality\ntop_characters &lt;- tibble(\n  Character = V(empresses_graph)$Label,\n  InDegree = degree(empresses_graph, mode = \"in\"),\n  OutDegree = degree(empresses_graph, mode = \"out\"),\n  TotalDegree = degree(empresses_graph, mode = \"total\")\n) %&gt;%\n  arrange(desc(TotalDegree)) %&gt;%\n  left_join(.,relation_data$nodes%&gt;%select(Label,Title,Alliance,Bio),by=(c(\"Character\"=\"Label\")))%&gt;%\n  slice_head(n = 5)\n\nknitr::kable(top_characters, caption = \"Top 5 Characters by Total Connections\")\n\n\nTop 5 Characters by Total Connections\n\n\n\n\n\n\n\n\n\n\nCharacter\nInDegree\nOutDegree\nTotalDegree\nTitle\nAlliance\nBio\n\n\n\n甄嬛\n16\n22\n38\n皇贵妃\n甄嬛阵营\n因容貌酷似已逝的纯元皇后被选中，一直蒙受恩宠。对皇帝真心实意。因为在后宫算计中受到影响，一步步变得城府至深，结果却是她的一厢情愿，离开后宫，遇到了果郡王，心心相爱。后来设计回宫。经历了后宫无数的明争暗斗，勾心斗角，害死皇帝，扶养子登位，终于成为太后。\n\n\n雍正\n13\n18\n31\n皇上\n皇室成员\n九龙夺嫡之后终于登上了宝座。在他的眼中任何人都可以成为他巩固江山的棋子。纯元皇后去世多年，痴情的皇帝对她依然念念不忘，于是对酷似纯元皇后的甄嬛愈加宠爱，渐渐超过了华妃。甄嬛回宫，皇上对其极其信任，百依百顺。但最后还是被枕边人算计。\n\n\n宜修\n8\n11\n19\n皇后\n皇后阵营\n纯元皇后的庶出妹妹。外表稳重端庄，但擅于隐忍，城府之深，极爱后位，后宫妃子皆为她的棋子。利用甄嬛打败了华妃，继而将甄嬛赶出宫外。甄嬛回宫后继续步步为营，但最后因害死纯元皇后的事情东窗事发，在太后的力保之下没被废后，但永生禁足于景仁宫，二人死生不复相见，最后新帝登基，心悸而死。\n\n\n允礼\n7\n7\n14\n果亲王\n皇室成员\n果郡王不同于宫中争权夺势的皇室子弟，他庆幸自己并非帝王之身，不必将朝政琐事萦绕于身，他不求娇妻美妾如云，只盼与爱人厮守到老。果郡王爱着甄嬛，却又不能僭越宫廷之礼。他善良、痴情、风流倜傥，终其一生都是在寻求一份爱，奋不顾身地保护一份爱，说他是为爱而生也不为过。\n\n\n年世兰\n6\n7\n13\n正三品贵嫔\n华妃阵营\n大将军的妹妹，仗着身世和宠爱，对其他的妃嫔不择手段，但本性并不坏，因为孩子被打掉而痛恨端妃。甄嬛在其打入冷宫后还不能怀孕的事实告诉她，绝望的华妃撞墙而死。最终她被追封为敦肃皇贵妃。",
    "crumbs": [
      "Book",
      "§1 Introduction to Digital Humanities"
    ]
  },
  {
    "objectID": "book/01-introduction.html#conclusion",
    "href": "book/01-introduction.html#conclusion",
    "title": "§1 Introduction to Digital Humanities",
    "section": "\n3 Conclusion",
    "text": "3 Conclusion\nThese demonstrations showcase just a few of the exciting possibilities that digital humanities offers for exploring and analyzing humanities data. By combining computational methods with traditional humanities scholarship, we can uncover new patterns, ask novel questions, and gain fresh insights into cultural and historical materials.\n\n\n\n\n\n\nFinal Reflection\n\n\n\n\n\nConsider the examples we’ve explored today:\n\nWhich technique (word frequency analysis, sentiment analysis, or network analysis) do you find most intriguing? Why?\nCan you think of a humanities question or topic from your own interests that might benefit from one of these computational approaches?\n\nShare your thoughts with a partner or the class if time allows.",
    "crumbs": [
      "Book",
      "§1 Introduction to Digital Humanities"
    ]
  },
  {
    "objectID": "toolbox.html#poker-card-ballot-drawer",
    "href": "toolbox.html#poker-card-ballot-drawer",
    "title": "Toybox",
    "section": "🃏 Poker Card Ballot Drawer",
    "text": "🃏 Poker Card Ballot Drawer"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Digital Humanities",
    "section": "",
    "text": "Introduction to Digital Humanitites 数字人文导论 • 2024 Fall 秋\nSEIS 英语学院 • BFSU 北京外国语大学\n\n\n\n\n\nDr Meng Liu 刘梦\n\n🏢 Office: SEIS 202\n📧 Email: mengliu@bfsu.edu.cn\n🌐 Website: mengliu.info\n\n\n\n\n\n🗓️ Class Days/Times: Monday/Wednesday 13:30 - 15:05\n🏛️ Format: In-person\n📍 Location: 逸夫二阶\n\n\n\n\n\n💬 Wechat (group)\n📧 Email\n\n\n\n\n\n\n\n平台1：微信\n\n课堂互动：微助教\n课后沟通及消息发布：微信群\n\n平台2：课程网站\n\n课堂资料信息\n\n\n\n\n\n\nAnonymous Feedback Form"
  },
  {
    "objectID": "index.html#course-information",
    "href": "index.html#course-information",
    "title": "Introduction to Digital Humanities",
    "section": "",
    "text": "Introduction to Digital Humanitites 数字人文导论 • 2024 Fall 秋\nSEIS 英语学院 • BFSU 北京外国语大学\n\n\n\n\n\nDr Meng Liu 刘梦\n\n🏢 Office: SEIS 202\n📧 Email: mengliu@bfsu.edu.cn\n🌐 Website: mengliu.info\n\n\n\n\n\n🗓️ Class Days/Times: Monday/Wednesday 13:30 - 15:05\n🏛️ Format: In-person\n📍 Location: 逸夫二阶\n\n\n\n\n\n💬 Wechat (group)\n📧 Email\n\n\n\n\n\n\n\n平台1：微信\n\n课堂互动：微助教\n课后沟通及消息发布：微信群\n\n平台2：课程网站\n\n课堂资料信息\n\n\n\n\n\n\nAnonymous Feedback Form"
  },
  {
    "objectID": "index.html#course-overview",
    "href": "index.html#course-overview",
    "title": "Introduction to Digital Humanities",
    "section": "Course Overview",
    "text": "Course Overview\n\n\n🌱 Foundations\n\nDigital Humanities Overview\n\n\n\n🛠️ Core DH Techniques\n\nR Programming Basics\nQuantitative Text Analysis\n\n\n\n🚀 Specialized Topics\n\nTopic Modelling\nSentiment Analysis\nSocial Network Analysis"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities",
    "href": "book/slides/s-intro.html#what-is-digital-humanities",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-1",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-1",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨\nWrite down three keywords that come to mind."
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-2",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-2",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨\n🤔 What patterns do you see in the word cloud? Any suprising entries?"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-3",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-3",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-4",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-4",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-5",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-5",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-6",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-6",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-7",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-7",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨"
  },
  {
    "objectID": "book/slides/s-intro.html#what-is-digital-humanities-8",
    "href": "book/slides/s-intro.html#what-is-digital-humanities-8",
    "title": "Introduction to Digital Humanities",
    "section": "What is digital humanities?🤨",
    "text": "What is digital humanities?🤨\n\n“Digital humanities work is done at the intersection of computational methods and humanities materials.”\n– Johanna Drucker, 2021 📚\n\n\n🔀 Intersection of computation and humanities\n🔗 Combines traditional disciplines with digital tools\n🤝 Collaborative and interdisciplinary\n🔄 Iterative and public-facing\n🔓 Open and accessible"
  },
  {
    "objectID": "book/slides/s-intro.html#components-of-dh-projects",
    "href": "book/slides/s-intro.html#components-of-dh-projects",
    "title": "Introduction to Digital Humanities",
    "section": "Components of DH Projects",
    "text": "Components of DH Projects\n\n📁 MATERIALS\n⚙️ PROCESSING\n🎨 PRESENTATION"
  },
  {
    "objectID": "book/slides/s-intro.html#dh-materials",
    "href": "book/slides/s-intro.html#dh-materials",
    "title": "Introduction to Digital Humanities",
    "section": "DH Materials",
    "text": "DH Materials\n\n💾 Digital or digitized humanities sources\n🖼️ Examples: texts, images, audio, video\n📈 Often large-scale datasets"
  },
  {
    "objectID": "book/slides/s-intro.html#dh-processing",
    "href": "book/slides/s-intro.html#dh-processing",
    "title": "Introduction to Digital Humanities",
    "section": "DH Processing",
    "text": "DH Processing\n\n🧮 Computational methods and tools\n📊 Data analysis and modeling\n🤖 Machine learning and AI applications"
  },
  {
    "objectID": "book/slides/s-intro.html#dh-presentation",
    "href": "book/slides/s-intro.html#dh-presentation",
    "title": "Introduction to Digital Humanities",
    "section": "DH Presentation",
    "text": "DH Presentation\n\n📊 Visualizations\n🗄️ Digital archives\n🖱️ Interactive platforms\n🗃️ Databases"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\n\n🍿 Watch a video about the project"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-1",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-1",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\nWhat it is\n\n🌐 One of the largest Digital Humanities initiatives worldwide\n🏛️ Stanford-based project with international collaborations\n🚀 Groundbreaking effort in historical data visualization"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-2",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-2",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\nWhat it does\n\n🗺️ Maps and analyzes intellectual networks of the 17th-18th century Enlightenment\n✉️ Visualizes over 200,000 letters exchanged by key historical figures\n🔍 Reveals patterns of knowledge exchange across Europe and the Americas"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-3",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-3",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\nCan you identify the core components of this DH project? 🧐 (quick learning check!)\n\n📁 MATERIALS\n⚙️ PROCESSING\n🎨 PRESENTATION"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-4",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-4",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\nCan you identify the core components of this DH project? 🧐\n\n📁 MATERIALS: Letters and correspondence of Enlightenment thinkers\n⚙️ PROCESSING: Network analysis, geospatial mapping\n🎨 PRESENTATION: Interactive visualizations of intellectual networks"
  },
  {
    "objectID": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-5",
    "href": "book/slides/s-intro.html#example-mapping-the-republic-of-letters-5",
    "title": "Introduction to Digital Humanities",
    "section": "Example: Mapping the Republic of Letters",
    "text": "Example: Mapping the Republic of Letters\n🧐 How is the project different from a traditional humanities project? Discuss in pairs to identify key differences between traditional humanities and DH."
  },
  {
    "objectID": "book/slides/s-intro.html#digital-humanities-vs-traditional-humanities",
    "href": "book/slides/s-intro.html#digital-humanities-vs-traditional-humanities",
    "title": "Introduction to Digital Humanities",
    "section": "Digital Humanities vs Traditional Humanities",
    "text": "Digital Humanities vs Traditional Humanities\n\n\nTraditional Humanities:\n\n🔎 Limited by human reading capacity\n🧑‍🏫 Often individual research\n📚 Primarily books and articles\n🖋️ Close reading and interpretation\n🏛️ Focus on canonical works\n🗂️ Manual data collection and analysis\n🌐 Geographically limited research scope\n🕰️ Time-intensive archival research\n📊 Limited quantitative analysis\n🎭 Emphasis on qualitative methods\n\n\nDigital Humanities:\n\n📊 Handles large datasets and corpora\n👥 Often team-based, interdisciplinary projects\n🖥️ Diverse digital outputs (visualizations, databases, etc.)\n🔍 Distant reading and pattern recognition\n📜 Inclusion of non-canonical texts and artifacts\n🤖 Automated data collection and processing\n🌍 Global reach through digital archives\n⚡ Rapid processing of vast information\n📈 Advanced statistical and computational analysis\n🔀 Integration of quantitative and qualitative methods"
  },
  {
    "objectID": "book/slides/s-intro.html#reflection",
    "href": "book/slides/s-intro.html#reflection",
    "title": "Introduction to Digital Humanities",
    "section": "Reflection",
    "text": "Reflection\n💡 Does humanities need computational methods?\n🧑 Are we losing the “human” in digital humanities?\n⚖️ How might DH methods transform your area of study?\nDiscuss with a partner, then share with the class."
  },
  {
    "objectID": "book/02-R.html",
    "href": "book/02-R.html",
    "title": "§2 Getting Started with R",
    "section": "",
    "text": "We will do all of your analysis with the open source (and free!) programming language R. We will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations produces the actual statistics and graphical output, while RStudio provides a nice interface for running R code.",
    "crumbs": [
      "Book",
      "§2 Getting Started with R"
    ]
  },
  {
    "objectID": "book/02-R.html#r-and-rstudio",
    "href": "book/02-R.html#r-and-rstudio",
    "title": "§2 Getting Started with R",
    "section": "",
    "text": "We will do all of your analysis with the open source (and free!) programming language R. We will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations produces the actual statistics and graphical output, while RStudio provides a nice interface for running R code.",
    "crumbs": [
      "Book",
      "§2 Getting Started with R"
    ]
  },
  {
    "objectID": "book/02-R.html#online-help",
    "href": "book/02-R.html#online-help",
    "title": "§2 Getting Started with R",
    "section": "2 Online Help",
    "text": "2 Online Help\nData science and statistical programming can be difficult. Computers are stupid and little errors in your code can cause hours of headache (even if you’ve been doing this stuff for years!).\nFortunately there are tons of online resources to help you with this. Two of the most important are StackOverflow (a Q&A site with hundreds of thousands of answers to all sorts of programming questions) and Posit Community (a forum specifically designed for people using RStudio and the tidyverse (i.e. you)).\nIf you use Mastodon or Twitter/X, post R-related questions and content with #rstats. The community there is exceptionally generous and helpful.\nChatGPT is generally relatively okay with R questions, but it may hallucinate responses—it sometimes imagine packages that don’t exist and then give you answers with them. Think of it as glorified autocomplete. I’d encourage you to read the first few paragraphs here about a few important things to keep in mind when using ChatGPT, though.\nSearching for help with R on Google can sometimes be tricky because the program name is, um, a single letter. Google is generally smart enough to figure out what you mean when you search for “r scatterplot”, but if it does struggle, try searching for “rstats” instead (e.g. “rstats scatterplot”). Also, since most of your R work will deal with {ggplot2}, it’s often easier to just search for that instead of the letter “r” (e.g. “ggplot scatterplot”).",
    "crumbs": [
      "Book",
      "§2 Getting Started with R"
    ]
  },
  {
    "objectID": "book/02-R.html#installation-guide",
    "href": "book/02-R.html#installation-guide",
    "title": "§2 Getting Started with R",
    "section": "3 Installation Guide",
    "text": "3 Installation Guide\n\n3.1 Install R\nFirst you need to install R itself (the engine).\n\nGo to the CRAN (Collective R Archive Network) website: https://cran.r-project.org/\nClick on “Download R for XXX”, where XXX is either Mac or Windows: \n\nIf you use macOS, scroll down to the first .pkg file in the list of files (in this picture, it’s R-4.0.0.pkg; as of right now, the current version is 4.4.1) and download it.\n\n\n\nIf you use Windows, click “base” (or click on the bolded “install R for the first time” link) and download it. \n\nDouble click on the downloaded file (check your Downloads folder). Click yes through all the prompts to install like any other program.\nIf you use macOS, download and install XQuartz. You do not need to do this on Windows.\n\n\n\n3.2 Install RStudio\nNext, you need to install RStudio, the nicer graphical user interface (GUI) for R (the dashboard). Once R and RStudio are both installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won’t ever have to interact with it directly.\n\nGo to the free download location on RStudio’s website: https://www.rstudio.com/products/rstudio/download/#download\nThe website should automatically detect your operating system (macOS or Windows) and show a big download button for it: \nIf not, scroll down a little to the large table and choose the version of RStudio that matches your operating system.\n\nDouble click on the downloaded file (again, check your Downloads folder). Click yes through all the prompts to install like any other program.\n\nDouble click on RStudio to run it (check your applications folder or start menu).\n\n\n3.3 Install tidyverse\nR packages are easy to install with RStudio. Select the packages panel, click on “Install,” type the name of the package you want to install, and press enter. \nThis can sometimes be tedious when you’re installing lots of packages, though. The tidyverse, for instance, consists of dozens of packages (including {ggplot2}) that all work together. Rather than install each individually, you can install a single magical package and get them all at the same time.\nGo to the packages panel in RStudio, click on “Install,” type “tidyverse”, and press enter. You’ll see a bunch of output in the RStudio console as all the tidyverse packages are installed. \nNotice also that RStudio will generate a line of code for you and run it: install.packages(\"tidyverse\"). You can also just paste and run this instead of using the packages panel.\n\n\n3.4 Install tinytex (Optional, this is for rendering PDF files)\nWhen you knit to PDF, R uses a special scientific typesetting program named LaTeX (pronounced “lay-tek” or “lah-tex”; for goofy nerdy reasons, the x is technically the “ch” sound in “Bach”, but most people just say it as “k”—saying “layteks” is frowned on for whatever reason).\nLaTeX is neat and makes pretty documents, but it’s a huge program—the macOS version, for instance, is nearly 4 GB! To make life easier, there’s an R package named {tinytex} that installs a minimal LaTeX program and that automatically deals with differences between macOS and Windows.\nHere’s how to install {tinytex} so you can knit to pretty PDFs:\n\nUse the Packages in panel in RStudio to install {tinytex} like you did above with {tidyverse}. Alternatively, run install.packages(\"tinytex\") in the console.\nRun tinytex::install_tinytex() in the console.\nWait for a bit while R downloads and installs everything you need.\nThe end! You should now be able to knit to PDF.\n\nCredit: this installation guide was adpated from the guide by Dr Andrew Heiss at Georgia State University.",
    "crumbs": [
      "Book",
      "§2 Getting Started with R"
    ]
  },
  {
    "objectID": "book/index.html",
    "href": "book/index.html",
    "title": "Preface",
    "section": "",
    "text": "This is the textbook for the course Introduction to Digital Humanities taught by Meng Liu, at the School of English and International Studies, Beijing Foreign Studies University.\nIntroduction to Digital Humanities explores the intersection of humanities scholarship and digital methodologies. Students will learn how computational techniques can enhance humanities research, covering key concepts in digital humanities, modern R programming, and various analytical methods including quantitative text analysis, topic modeling, sentiment analysis, and social network analysis. Through hands-on application of digital tools to humanities data, students will develop both technical skills and critical thinking abilities. The course progresses from foundational programming to advanced analytical techniques, concluding with discussions on ethics and AI in humanities scholarship. By the end of the course, students will be equipped with a versatile toolkit for innovative, data-driven humanities research, suitable for those seeking to expand their methodological approach to cultural studies.\nThe content of the book is updated on a regular basis as the course progresses.",
    "crumbs": [
      "Book",
      "Preface"
    ]
  },
  {
    "objectID": "book/index.html#introduction-and-welcome-slides",
    "href": "book/index.html#introduction-and-welcome-slides",
    "title": "Preface",
    "section": "Introduction and Welcome Slides",
    "text": "Introduction and Welcome Slides",
    "crumbs": [
      "Book",
      "Preface"
    ]
  },
  {
    "objectID": "book/slides/s-preface.html#course-overview",
    "href": "book/slides/s-preface.html#course-overview",
    "title": "Introduction to Digital Humanities",
    "section": "Course Overview",
    "text": "Course Overview\n\n🎒 Course design:\n\nWith a more pratical focus on DH methods using R\nLectures followed by practical sessions with R\nBring your laptop 💻\n\n🏠 Course platform:\n\n💬 Wechat: notifications + live chats\n🛜 Course website: course materials/code scripts"
  },
  {
    "objectID": "book/slides/s-preface.html#why-focus-on-dh-methods",
    "href": "book/slides/s-preface.html#why-focus-on-dh-methods",
    "title": "Introduction to Digital Humanities",
    "section": "Why Focus on DH Methods?",
    "text": "Why Focus on DH Methods?\n\n🌉 Common ground: Methods bridge diverse humanities disciplines\n🔧 Transferable skills: Applicable across various research areas\n🚀 Future-proofing: Open the door to coding/programming to prepare for the AI age\n🧠 Critical thinking: Enhance analytical skills for all humanities\n💡 Computational thinking: Develop a sense of data and computational thinking"
  },
  {
    "objectID": "book/slides/s-preface.html#course-overview-1",
    "href": "book/slides/s-preface.html#course-overview-1",
    "title": "Introduction to Digital Humanities",
    "section": "Course Overview",
    "text": "Course Overview\n\n🎯 Learning outcomes:\n\nUnderstand key DH concepts and methodologies\nDevelop basic programming skills in R\nApply digital methods to humanities research questions\nCritically evaluate DH projects and their implications"
  },
  {
    "objectID": "book/slides/s-preface.html#getting-ready",
    "href": "book/slides/s-preface.html#getting-ready",
    "title": "Introduction to Digital Humanities",
    "section": "Getting Ready",
    "text": "Getting Ready\n\n🏠 Tour the website\n💬 Create wechat group\n🤳 Join 微助教班级"
  },
  {
    "objectID": "book/slides/s-preface.html#about-you",
    "href": "book/slides/s-preface.html#about-you",
    "title": "Introduction to Digital Humanities",
    "section": "About You",
    "text": "About You"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Welcome to Introduction to Digital Humanities! We will cover several key topics in digital humanities and R programming. Each topic will be covered in theoretical/conceptual lectures, followed by practical sessions.\nHere’s a breakdown of our semester:\n\n\n\n\n\n\n\n\nWeek\nDate\nContent\n\n\n\n\n1\n9.9\nOrientation: Introduction to Digital Humanities\n\n\n2-4\n9.14, 9.23, 9.30\nR Programming Basics\n\n\n5-7\n10.7, 10.14, 10.21\nQuantitative Text Analysis\n\n\n8-10\n10.28, 11.4, 11.11\nTopic Modelling\n\n\n11-12\n11.18, 11.25\nSentiment Analysis\n\n\n13-15\n12.2, 12.9, 12.16\nSocial Network Analysis\n\n\n16\n12.23\nEthics, AI and Future of Digital Humanities\n\n\n17-18\nExam Weeks\nFinal Assessment\n\n\n\n\n\n\n\n\n\nSchedule Subject to Change\n\n\n\nPlease note that this schedule is tentative and may be adjusted as needed throughout the semester to accommodate our learning progress and any unforeseen circumstances."
  },
  {
    "objectID": "syllabus.html#course-schedule",
    "href": "syllabus.html#course-schedule",
    "title": "Syllabus",
    "section": "",
    "text": "Welcome to Introduction to Digital Humanities! We will cover several key topics in digital humanities and R programming. Each topic will be covered in theoretical/conceptual lectures, followed by practical sessions.\nHere’s a breakdown of our semester:\n\n\n\n\n\n\n\n\nWeek\nDate\nContent\n\n\n\n\n1\n9.9\nOrientation: Introduction to Digital Humanities\n\n\n2-4\n9.14, 9.23, 9.30\nR Programming Basics\n\n\n5-7\n10.7, 10.14, 10.21\nQuantitative Text Analysis\n\n\n8-10\n10.28, 11.4, 11.11\nTopic Modelling\n\n\n11-12\n11.18, 11.25\nSentiment Analysis\n\n\n13-15\n12.2, 12.9, 12.16\nSocial Network Analysis\n\n\n16\n12.23\nEthics, AI and Future of Digital Humanities\n\n\n17-18\nExam Weeks\nFinal Assessment\n\n\n\n\n\n\n\n\n\nSchedule Subject to Change\n\n\n\nPlease note that this schedule is tentative and may be adjusted as needed throughout the semester to accommodate our learning progress and any unforeseen circumstances."
  },
  {
    "objectID": "syllabus.html#assessment",
    "href": "syllabus.html#assessment",
    "title": "Syllabus",
    "section": "📊 Assessment",
    "text": "📊 Assessment\nYour final grade will be composed of the following elements:\n\nMonthly Quiz 📝: 30%\n\nRegular assessments to check your understanding of the course material. (微助教/问卷星)\n\nClass Participation and Attendance 🙋‍♀️: 30%\n\nYour active involvement in class discussions and activities is crucial! (微助教/Leaderboard)\n\n\n\n\n\n\n\nImportant\n\n\n\n\nAbsence of one-third of class time, excused or unexcused, will disqualify you from earning credits for the course.\n\n\n\nTerm Paper 📄: 40%\n\n\n\n\n\n\n🎯 Term Project\n\n\n\nA digital humanities project of your choice! You should pick your topic for the term project by week 12. More details will be released later when you have learned R basics."
  },
  {
    "objectID": "syllabus.html#important-pep-talk",
    "href": "syllabus.html#important-pep-talk",
    "title": "Syllabus",
    "section": "🚀 Important Pep Talk!",
    "text": "🚀 Important Pep Talk!\n\n\n\n\n\n\n💪 Setting the Right Mindset\n\n\n\nRemember these key points while you embark on your DH journey:\n\n\n\nEmbrace the Learning Curve\n\nLearning digital tools and methods is like learning a new language—it takes time and practice.\nDon’t be discouraged by initial difficulties; everyone faces challenges when starting out.\nCelebrate small victories and progress along the way.\n\n\n\nFrustration is Part of Growth\n\nFeeling frustrated? Congratulations! It means you’re pushing your boundaries and learning.\nHadley Wickham (Father of modern R syntax) once said: “Everyone gets frustrated… I still get frustrated occasionally when writing R code. It’s just a natural part of programming.”\nTake breaks when needed, but don’t give up. Return with fresh eyes and renewed determination.\n\n\n\nCultivate Curiosity\n\nApproach new concepts with an open and inquisitive mind.\nAsk questions, explore beyond the course material, and let your curiosity drive your learning.\nDigital humanities is a field of endless possibilities—embrace the excitement of discovery.\n\n\n\nBuild Resilience\n\nExpect challenges and setbacks—they’re not roadblocks, but opportunities to problem-solve.\nDevelop a growth mindset: view difficulties as chances to improve, not as personal shortcomings.\nRemember: every expert was once a beginner. Persistence is key to mastery.\n\n\n\n\n\n\n\nRemember\n\n\n\nI promise you can succeed in this class as long as you put your heart to it. Learning new digital skills may seem daunting at first, but with patience, persistence, and the right mindset, you’ll be amazed at what you can achieve. Don’t hesitate to reach out for help when you need it—we’re all in this learning journey together!"
  },
  {
    "objectID": "book/05-tidyverse.html",
    "href": "book/05-tidyverse.html",
    "title": "§5 Spinning the Reels 🎰",
    "section": "",
    "text": "Welcome to the exciting world of tidyverse! In this chapter, we’ll build on our knowledge of R by exploring the tidyverse, a collection of R packages designed for data science. We’ll create a virtual slot machine to demonstrate the power and simplicity of tidyverse functions."
  },
  {
    "objectID": "book/05-tidyverse.html#learning-check",
    "href": "book/05-tidyverse.html#learning-check",
    "title": "§5 Spinning the Reels 🎰",
    "section": "\n1.1 Learning Check 🏁",
    "text": "1.1 Learning Check 🏁"
  },
  {
    "objectID": "book/05-tidyverse.html#hands-on-coding",
    "href": "book/05-tidyverse.html#hands-on-coding",
    "title": "§5 Spinning the Reels 🎰",
    "section": "\n2.1 Hands-On Coding 💻",
    "text": "2.1 Hands-On Coding 💻\nTry the following:\n\nUse filter() to find all the Aces in the deck.\nUse arrange() to sort the deck by suit, then by value.\nUse group_by() and summarise() to find the average value for each suit.\n\n\n\n# Find all Aces\naces &lt;- deck %&gt;%\nfilter(rank == \"Ace\")\n# Sort deck\nsorted_deck &lt;- deck %&gt;%\narrange(suit, value)\n# Average value by suit\navg_by_suit &lt;- deck %&gt;%\ngroup_by(suit) %&gt;%\nsummarise(avg_value = mean(value))"
  },
  {
    "objectID": "book/05-tidyverse.html#learning-check-1",
    "href": "book/05-tidyverse.html#learning-check-1",
    "title": "§5 Spinning the Reels 🎰",
    "section": "\n3.1 Learning Check 🏁",
    "text": "3.1 Learning Check 🏁"
  },
  {
    "objectID": "book/05-tidyverse.html#hands-on-coding-1",
    "href": "book/05-tidyverse.html#hands-on-coding-1",
    "title": "§5 Spinning the Reels 🎰",
    "section": "\n4.1 Hands-On Coding 💻",
    "text": "4.1 Hands-On Coding 💻\nTry the following:\n\nModify the spin_slot_machine() function to allow for different numbers of reels.\nCreate a function that simulates playing the slot machine multiple times and calculates the average payout.\nUse ggplot2 to visualize the distribution of symbols after many spins.\n\n\n\n# Modified spin function\nspin_slot_machine &lt;- function(n_reels = 3) {\n    set.seed(NULL)\n    result &lt;- symbols %&gt;%\n    slice_sample(n = n_reels, weight_by = probability, replace = TRUE)\n    if (n_distinct(result$symbol) == 1) {\n        winnings &lt;- result$payout[1]\n        message(paste(\"Jackpot! You won\", winnings, \"coins!\"))\n        } else {\n        message(\"Sorry, try again!\")\n    }\n    return(result)\n}\n# Simulate multiple spins\nsimulate_spins &lt;- function(n_spins = 1000) {\n    results &lt;- map_df(1:n_spins, ~spin_slot_machine())\n    avg_payout &lt;- results %&gt;%\n        group_by(symbol) %&gt;%\n        summarise(count = n()) %&gt;%\n        left_join(symbols, by = \"symbol\") %&gt;%\n        mutate(total_payout = count*payout) %&gt;%\n        summarise(avg_payout = sum(total_payout) / n_spins) %&gt;%\n        pull(avg_payout)\n    return(list(results = results, avg_payout = avg_payout))\n}\n# Visualize distribution of symbols\nvisualize_spins &lt;- function(n_spins = 1000) {\n    simulation &lt;- simulate_spins(n_spins)\n    ggplot(simulation$results, aes(x = symbol)) +\n    geom_bar(fill = \"skyblue\") +\n    labs(title = paste(\"Distribution of Symbols after\", n_spins, \"Spins\"),\n    x = \"Symbol\",\n    y = \"Count\") +\n    theme_minimal()\n}\n# Run the simulation and visualization\nset.seed(123) # for reproducibility\nsim_results &lt;- simulate_spins(1000)\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\nJackpot! You won 10 coins!\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 50 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 200 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 50 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\nprint(paste(\"Average payout:\", round(sim_results$avg_payout, 2)))\n\n[1] \"Average payout: 111.39\"\n\nvisualize_spins(1000)\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 50 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nJackpot! You won 10 coins!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 10 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\nSorry, try again!\n\n\nJackpot! You won 20 coins!\n\n\nSorry, try again!\nSorry, try again!\nSorry, try again!"
  },
  {
    "objectID": "book/04-cards.html",
    "href": "book/04-cards.html",
    "title": "4 Dealing with Cards 🃏",
    "section": "",
    "text": "Welcome to your second project with R! We’ll create a virtual deck of playing cards to explore more advanced R concepts. Just as historians analyze artifacts or literary scholars examine texts, we’ll be examining different ways to structure and manipulate data in R."
  },
  {
    "objectID": "book/04-cards.html#numeric",
    "href": "book/04-cards.html#numeric",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.1 Numeric",
    "text": "1.1 Numeric\nWe’ve already seen this with our dice. It includes both integers and decimal numbers:\n{r} Integer my_integer &lt;- 42 Double (decimal) my_double &lt;- 3.14 print(my_integer) print(my_double)"
  },
  {
    "objectID": "book/04-cards.html#character",
    "href": "book/04-cards.html#character",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.2 Character",
    "text": "1.2 Character\nThis is used for text data, like words or sentences:\n{r} my_name &lt;- “Shakespeare” my_quote &lt;- “To be or not to be”"
  },
  {
    "objectID": "book/04-cards.html#logical",
    "href": "book/04-cards.html#logical",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.3 Logical",
    "text": "1.3 Logical\nThis represents true/false values:\nis_sunny &lt;- TRUE is_raining &lt;- FALSE"
  },
  {
    "objectID": "book/04-cards.html#factor",
    "href": "book/04-cards.html#factor",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.4 Factor",
    "text": "1.4 Factor\nThis is used for categorical data, like genres in literature:\n\ngenres &lt;- factor(c(\"Poetry\", \"Prose\", \"Drama\"))\n\n\n\n\n\n\n\nNote\n\n\n\nFactors are useful for representing data that falls into distinct categories, like genres, time periods, or author nationalities in literary studies."
  },
  {
    "objectID": "book/04-cards.html#learning-check",
    "href": "book/04-cards.html#learning-check",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.5 Learning Check 🏁",
    "text": "1.5 Learning Check 🏁"
  },
  {
    "objectID": "book/04-cards.html#hands-on-coding",
    "href": "book/04-cards.html#hands-on-coding",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n1.6 Hands-On Coding 💻",
    "text": "1.6 Hands-On Coding 💻\nTry the following:\n\nCreate a numeric variable called year_published and assign it the year your favorite book was published.\nCreate a character variable called book_title with the title of your favorite book.\nCreate a logical variable called is_fiction indicating whether your favorite book is fiction (TRUE) or non-fiction (FALSE).\nCreate a factor variable called book_genre with a few genres (e.g., “Mystery”, “Romance”, “Science Fiction”).\n\n\n\n# Year published\nyear_published &lt;- 1960\n# Book title\nbook_title &lt;- \"To Kill a Mockingbird\"\n# Fiction or non-fiction\nis_fiction &lt;- TRUE\n# Book genre\nbook_genre &lt;- factor(c(\"Mystery\", \"Romance\", \"Science Fiction\"))"
  },
  {
    "objectID": "book/04-cards.html#accessing-data-in-a-data-frame",
    "href": "book/04-cards.html#accessing-data-in-a-data-frame",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n2.1 Accessing Data in a Data Frame",
    "text": "2.1 Accessing Data in a Data Frame\nYou can access specific parts of a data frame using various methods:\n\n# Get a specific column\nbooks$title\n\n[1] \"1984\"                \"Pride and Prejudice\" \"The Great Gatsby\"   \n\n#Get a specific row\nbooks[2, ]\n\n                title author year\n2 Pride and Prejudice Austen 1813\n\n#Get a specific cell\nbooks[1, 2]\n\n[1] \"Orwell\""
  },
  {
    "objectID": "book/04-cards.html#learning-check-1",
    "href": "book/04-cards.html#learning-check-1",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n2.2 Learning Check 🏁",
    "text": "2.2 Learning Check 🏁"
  },
  {
    "objectID": "book/04-cards.html#hands-on-coding-1",
    "href": "book/04-cards.html#hands-on-coding-1",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n2.3 Hands-On Coding 💻",
    "text": "2.3 Hands-On Coding 💻\nLet’s create a data frame for a deck of cards:\n\nCreate three vectors: suit (Hearts, Diamonds, Clubs, Spades), rank (Ace, 2-10, Jack, Queen, King), and value (1-13).\nUse these vectors to create a data frame called deck.\nPrint the first few rows of your deck using the head() function.\nAccess all the hearts in your deck.\nFind the value of the King of Spades.\n\n\n\n# Create vectors\nsuit &lt;- rep(c(\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"), each = 13)\nrank &lt;- rep(c(\"Ace\", 2:10, \"Jack\", \"Queen\", \"King\"), times = 4)\nvalue &lt;- rep(1:13, times = 4)\n\n# Create data frame\ndeck &lt;- data.frame(suit, rank, value)\n\n# Print first few rows\nhead(deck)\n\n    suit rank value\n1 Hearts  Ace     1\n2 Hearts    2     2\n3 Hearts    3     3\n4 Hearts    4     4\n5 Hearts    5     5\n6 Hearts    6     6\n\n# Access all hearts\nhearts &lt;- deck[deck$suit == \"Hearts\", ]\n\n# Find value of King of Spades\nking_of_spades &lt;- deck[deck$suit == \"Spades\" & deck$rank == \"King\", \"value\"]\nprint(king_of_spades)\n\n[1] 13"
  },
  {
    "objectID": "book/04-cards.html#learning-check-2",
    "href": "book/04-cards.html#learning-check-2",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n3.1 Learning Check 🏁",
    "text": "3.1 Learning Check 🏁"
  },
  {
    "objectID": "book/04-cards.html#hands-on-coding-2",
    "href": "book/04-cards.html#hands-on-coding-2",
    "title": "4 Dealing with Cards 🃏",
    "section": "\n3.2 Hands-On Coding 💻",
    "text": "3.2 Hands-On Coding 💻\nLet’s practice working with our deck:\n\nUse the str() function to examine the structure of the deck.\nFind all the face cards (Jack, Queen, King) in the deck.\nCalculate the average value of all cards in the deck.\nCreate a new column in the deck called color, where Hearts and Diamonds are “Red” and Clubs and Spades are “Black”.\n(Optional challenge) Create a function that randomly “draws” a card from the deck and prints its description (e.g., “You drew the King of Hearts”).\n\n\n\n# Examine structure\nstr(deck)\n\n'data.frame':   52 obs. of  3 variables:\n $ suit : chr  \"Hearts\" \"Hearts\" \"Hearts\" \"Hearts\" ...\n $ rank : chr  \"Ace\" \"2\" \"3\" \"4\" ...\n $ value: int  1 2 3 4 5 6 7 8 9 10 ...\n\n# Find face cards\nface_cards &lt;- deck[deck$rank %in% c(\"Jack\", \"Queen\", \"King\"), ]\n\n# Calculate average value\naverage_value &lt;- mean(deck$value)\n\n# Add color column\ndeck$color &lt;- ifelse(deck$suit %in% c(\"Hearts\", \"Diamonds\"), \"Red\", \"Black\")\n\n# (Optional) Draw a card function\ndraw_card &lt;- function() {\ncard &lt;- deck[sample(nrow(deck), 1), ]\nprint(paste(\"You drew the\", card$rank, \"of\", card$suit))\n}\ndraw_card()\n\n[1] \"You drew the 4 of Diamonds\""
  }
]