---
title: "Toybox"
format:
  html:
    toc: true
    number-sections: false
---

## 🏆 Student Leaderboard

<iframe src="leaderboard.html" width="100%" height="900px" frameborder="0" sandbox="allow-scripts allow-forms allow-same-origin"></iframe>

## 🃏 Poker Card Ballot Drawer

<div id="ballot-drawer"></div>

<script src="scripts/ballot-drawer.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    BallotDrawer.init('ballot-drawer');
  });
</script>

<br>
<br>

## 🚥 Real-Time Feedback System   

### Real-Time Personal Status ✅⏳🆘 

The floating traffic light 🚥 in the `bottom-right corner` is your personal status indicator. Here's how to use it:

1. **Hover** over the traffic light icon to expand it.
2. **Enter your name** when using it for the first time. You only need to input it once. *请按数北选课系统的姓名填写*
3. **Click** on one of the three status icons to update your status:
   - ✅ "Got it! 😎" - You're understanding and progressing well.
   - ⏳ "Hold on... 🤔" - You need a moment to process or feel a little bit confused.
   - 🆘 "Stuck...Help! 😵‍💫" - You're stuck and need assistance.

Remember to update it when your status changes!

### Real-Time Class Status Overview 📊 

The floating chart 📊 in the `bottom-left corner` shows the overall class status:

1. **Hover** over the chart icon to expand it.
2. It displays the percentage of students in each status.
3. The bars and percentages update automatically every 10 seconds during class time.
4. You can see when the data was last updated at the bottom of the chart.

This tool helps all of us understand the overall class progress in real-time.


<iframe src="book/float_traffic.html" width="200px" height="200px" style="border:none; position: fixed; bottom: 10px; right: 10px; z-index: 9999;" scrolling="no"></iframe>


<iframe src="book/float_dash.html" width="200px" height="200px" style="border:none; position: fixed; bottom: 10px; left: 10px; z-index: 9999;" scrolling="no"></iframe>

## 📊 Quiz Analysis

<div id="analysis-login" class="info-section" style="display: block;">
  <h3>Quiz Analysis Login</h3>
  <input type="password" id="analysis-password" placeholder="Enter admin password">
  <button id="login-button">Admin Login</button>
</div>

<div id="analysis-controls" class="info-section" style="display: none;">
  <h3>Quiz Analysis Controls</h3>
  <button id="run-analysis-button">Run Quiz Analysis</button>
  <button id="hide-analysis-button" style="display: none;">Hide Quiz Analysis</button>
  <button id="show-missing-takers-button">Show Missing Quiz Takers</button>
  <button id="hide-missing-takers-button" style="display: none;">Hide Missing Quiz Takers</button>
</div>

<div id="exam-analysis" class="info-section" style="display: none;"></div>
<div id="missing-exam-takers" class="info-section" style="display: none;"></div>

<script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
<script src="book/examQuestions.js"></script>
<script src="book/quiz.js"></script>
<script src="book/examAnalysis.js"></script>

<script>
console.log('Exam analysis script starting');

// Initialize Supabase client
const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_API_KEY);

// Event listeners
document.getElementById('login-button').addEventListener('click', verifyAnalysisPassword);
document.getElementById('run-analysis-button').addEventListener('click', runAnalysis);
document.getElementById('hide-analysis-button').addEventListener('click', hideAnalysis);
document.getElementById('show-missing-takers-button').addEventListener('click', showMissingExamTakers);
document.getElementById('hide-missing-takers-button').addEventListener('click', hideMissingExamTakers);

function verifyAnalysisPassword() {
  const password = document.getElementById('analysis-password').value;
  if (password === '1234') {
    document.getElementById('analysis-login').style.display = 'none';
    document.getElementById('analysis-controls').style.display = 'block';
  } else {
    alert('Incorrect password. Please try again.');
  }
}

async function runAnalysis() {
  try {
    const analysisData = await analyzeExamResults(supabaseClient);
    displayAnalysis(analysisData);
    document.getElementById('exam-analysis').style.display = 'block';
    document.getElementById('hide-analysis-button').style.display = 'inline-block';
    document.getElementById('run-analysis-button').style.display = 'none';
  } catch (error) {
    console.error('Error running exam analysis:', error);
    alert('An error occurred while running the analysis. Please try again.');
  }
}

function hideAnalysis() {
  document.getElementById('exam-analysis').style.display = 'none';
  document.getElementById('hide-analysis-button').style.display = 'none';
  document.getElementById('run-analysis-button').style.display = 'inline-block';
}

async function showMissingExamTakers() {
  try {
    await displayMissingExamTakers(supabaseClient);
    document.getElementById('missing-exam-takers').style.display = 'block';
    document.getElementById('show-missing-takers-button').style.display = 'none';
    document.getElementById('hide-missing-takers-button').style.display = 'inline-block';
  } catch (error) {
    console.error('Error showing missing exam takers:', error);
    alert('An error occurred while fetching missing exam takers. Please try again.');
  }
}

function hideMissingExamTakers() {
  document.getElementById('missing-exam-takers').style.display = 'none';
  document.getElementById('show-missing-takers-button').style.display = 'inline-block';
  document.getElementById('hide-missing-takers-button').style.display = 'none';
}
</script>
